// generated from rosidl_adapter/resource/msg.idl.em
// with input from auv_msgs/msg/NavigationStatus.msg
// generated code does not contain a copyright notice

#include "auv_msgs/msg/NED.idl"
#include "geographic_msgs/msg/GeoPoint.idl"
#include "geometry_msgs/msg/Point.idl"
#include "geometry_msgs/msg/Vector3.idl"
#include "std_msgs/msg/Header.idl"

module auv_msgs {
  module msg {
    module NavigationStatus_Constants {
      const uint8 STATUS_FAULT = 0;
      const uint8 STATUS_LOCAL_FRAME_OK = 1;
      const uint8 STATUS_GLOBAL_FRAME_OK = 2;
      const uint8 STATUS_POSITION_OK = 3;
      const uint8 STATUS_ESTIMATION_ERROR_OK = 8;
      const uint8 STATUS_WATER_VELOCITY_OK = 16;
      const uint8 STATUS_GROUND_VELOCITY_OK = 32;
      const uint8 STATUS_VELOCITY_OK = 48;
      const uint8 STATUS_ALL_OK = 59;
    };
    @verbatim (language="comment", text=
      " Sent by the navigator at 5-10 Hz.")
    struct NavigationStatus {
      std_msgs::msg::Header header;

      geographic_msgs::msg::GeoPoint global_position;

      geographic_msgs::msg::GeoPoint origin;

      @verbatim (language="comment", text=
        " NED position and altitude in metres.")
      auv_msgs::msg::NED position;

      float altitude;

      @verbatim (language="comment", text=
        " Body velocities in metres/sec., \"water-velocity\"")
      geometry_msgs::msg::Point body_velocity;

      @verbatim (language="comment", text=
        " Velocities measured wrt the seafloor/ground in metres/sec.")
      geometry_msgs::msg::Point seafloor_velocity;

      @verbatim (language="comment", text=
        " Orientation and orientation rate are in radians and radians/sec using RPY")
      geometry_msgs::msg::Vector3 orientation;

      geometry_msgs::msg::Vector3 orientation_rate;

      @verbatim (language="comment", text=
        " Variances for position and orientation")
      auv_msgs::msg::NED position_variance;

      geometry_msgs::msg::Vector3 orientation_variance;

      @verbatim (language="comment", text=
        " Status and associated constants (flags)" "\n"
        " These flags are here for legacy reasons." "\n"
        " We need a wider adoption of this package to rethink flags, get in contact if you have suggestions." "\n"
        " RESERVED RANGE: 0-100.")
      uint8 status;
    };
  };
};
